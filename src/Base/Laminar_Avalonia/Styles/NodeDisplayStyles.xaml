<Styles
  xmlns = "https://github.com/avaloniaui"
  xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:nds = "clr-namespace:Laminar_Avalonia.NodeDisplaySystem;assembly=Laminar_Avalonia"
  xmlns:displays="clr-namespace:Laminar_Core.NodeSystem.NodeComponents.Visuals;assembly=Laminar_Core"
  xmlns:c="clr-namespace:Laminar_Avalonia.Controls;assembly=Laminar_Avalonia">

	<Design.PreviewWith>
		<Border Padding="20">
			<nds:NodeDisplay/>
		</Border>
	</Design.PreviewWith>
	
	<Style Selector="nds|NodeDisplay">

		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="OuterBorder"
						ZIndex="0"
						BorderThickness="1"
						ClipToBounds="False">
					<Border.DataTemplates>

						<DataTemplate DataType="displays:VisualNodeComponentContainer">
							<Panel HorizontalAlignment="Stretch"
								   Classes="NodeComponentPanel"
								   Opacity="{Binding Opacity.Value}">
								<Panel IsVisible="{TemplateBinding ShowConnectors}">
									<Path Classes="Connector"
										  DataContext="{Binding InputConnector}"
										  HorizontalAlignment="Left">
										<Path.RenderTransform>
											<TranslateTransform X="-15"/>
										</Path.RenderTransform>
									</Path>
									<Path Classes="Connector"
										  DataContext="{Binding OutputConnector}"
										  HorizontalAlignment="Right">
										<Path.RenderTransform>
											<TranslateTransform X="17"/>
										</Path.RenderTransform>
									</Path>
								</Panel>
								<DockPanel>
									<Button Command="{Binding RemoveAction}"
											Content="-"
											IsVisible="{Binding HasRemoveFunction}"
											Margin="7,0,0,0"
											VerticalAlignment="Center"
											DockPanel.Dock="Right"
											HorizontalAlignment="Right"/>
									<ContentControl Content="{Binding Child}"/>
								</DockPanel>
							</Panel>
						</DataTemplate>

						<DataTemplate DataType="displays:NodeField">
							<Decorator
								Child="{Binding UserInterfaces[Avalonia.Controls.IControl].Value}"
								VerticalAlignment="Center"/>
						</DataTemplate>

						<DataTemplate DataType="displays:EditableNodeLabel">
							<c:EditableLabel Text="{Binding LabelText.Value, Mode=TwoWay}"
											 NeedsEditing ="{Binding NeedsEditing}"/>
						</DataTemplate>

						<DataTemplate DataType="displays:NodeLabel">
							<TextBlock Text="{Binding LabelText.Value}"
									   Opacity="{Binding Opacity.Value}"
									   HorizontalAlignment="Center"/>
						</DataTemplate>

						<DataTemplate DataType="displays:Separator">
							<Separator Width="{Binding $parent.Width}"
										Height="3"
										Background="{DynamicResource ThemeBorderLowBrush}"
										BorderBrush="White"/>
						</DataTemplate>

					</Border.DataTemplates>

					<StackPanel ClipToBounds="False">
						<ContentPresenter Name="PART_NameContainer"
										  Padding="6,0"
										  Content="{Binding CoreNode.Name, RelativeSource={RelativeSource TemplatedParent}}"/>
						<Border Name="Body"
								Background="#3e3e3e"
								MinWidth="150"
								ClipToBounds="False"
								Padding="10"
								Margin="0,3"
								IsVisible="{Binding CoreNode.HasFields, RelativeSource={RelativeSource TemplatedParent}}">
							<ItemsPresenter Name="PART_FieldContainer"
											Classes="NodeDisplay"
											Items="{Binding CoreNode.Fields, RelativeSource={RelativeSource TemplatedParent}}">
							</ItemsPresenter>
						</Border>
					</StackPanel>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="ItemsPresenter.NodeDisplay">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="0,0"/>
		<Setter Property="ItemsPanel">
			<ItemsPanelTemplate>
				<StackPanel Spacing="12"/>
			</ItemsPanelTemplate>
		</Setter>
	</Style>

	<Style Selector="Path.Connector">
		<Setter Property="Width" Value="13"/>
		<Setter Property="Height" Value="18"/>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="Stroke" Value="{DynamicResource ThemeBorderLowBrush}"/>
		<Setter Property="StrokeThickness" Value="1.5"/>
		<Setter Property="Data" Value="M 2,0 2,14 12,7 2,0 z"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Tag" Value="{Binding}"/>
		<Setter Property="IsVisible" Value="{Binding Exists.Value}"/>
		<Setter Property="Fill" Value="{Binding HexColour.Value}"/>
	</Style>

	<Style Selector="Path.Connector:pointerover">
		<Setter Property="Stroke" Value="{DynamicResource ThemeBorderHighBrush}"/>
	</Style>

	<Style Selector="nds|NodeDisplay:pointerover > Border#OuterBorder">
		<Setter Property="Background" Value="#2C2C35"/>
	</Style>

	<Style Selector="nds|NodeDisplay > Border#OuterBorder">
		<Setter Property="BorderBrush" Value="#00000000"/>
		<Setter Property="Background" Value="{DynamicResource HeaderColour}"/>
	</Style>

	<Style Selector="nds|NodeDisplay:error > Border#OuterBorder">
		<Setter Property="Background" Value="DarkRed"/>
	</Style>

	<Style Selector="nds|NodeDisplay:selected > Border#OuterBorder">
		<Setter Property="BorderBrush" Value="#EEEEEEFF"/>
	</Style>
</Styles>