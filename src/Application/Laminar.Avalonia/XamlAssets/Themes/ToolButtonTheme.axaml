<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:t="using:Laminar.Avalonia.ToolSystem">
    <SolidColorBrush x:Key="AccentButtonBackground" Color="{DynamicResource LaminarAccent}" />
    <SolidColorBrush x:Key="AccentButtonBackgroundPointerOver" Color="{DynamicResource LaminarAccentLight}"/>
    <SolidColorBrush x:Key="AccentButtonBackgroundPressed" Color="{DynamicResource LaminarAccentDark}"/>
    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
    <SolidColorBrush x:Key="ButtonBackground" Color="Transparent"/>
    <Thickness x:Key="ButtonPadding">0</Thickness>
    <Thickness x:Key="ButtonBorderThemeThickness">0</Thickness>
    
    <ControlTheme x:Key="NoBorderFlyoutPresenter" TargetType="FlyoutPresenter" BasedOn="{StaticResource {x:Type FlyoutPresenter}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </ControlTheme>
    
    <ControlTheme x:Key="ToolButton" 
                  x:DataType="t:ToolInstance"
                  TargetType="Button" 
                  BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip.ShowDelay" Value="200"/>
        <Setter Property="ToolTip.Tip">
            <Template>
                <StackPanel IsHitTestVisible="False">
                    <TextBlock Classes="b2">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource FirstNotNullValueConverter}">
                                <Binding Path="Description"/>
                                <Binding Path="ToolTemplate.Name"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Classes="b2"
                               IsVisible="{Binding ToolTemplate.Gesture, Converter={x:Static ObjectConverters.IsNotNull}}">
                        Currently bound to <Run Classes="Emphasis" FontWeight="Normal" Text="{Binding ToolTemplate.Gesture}"/>
                    </TextBlock>
                    <TextBlock Classes="b2">Press <Run Classes="Emphasis" FontWeight="Normal" Text="{DynamicResource ChangeBindingGestureString}"/> to change binding</TextBlock>
                </StackPanel>                
            </Template>
        </Setter>
        <Setter Property="Content">
            <Template>
                <Border Name="PART_PointerOverSource" Background="Transparent" 
                        ClipToBounds="False">
                    <Viewbox ClipToBounds="False">
                        <ContentControl Padding="8,10"
                                        Content="{Binding DataContext}"
                                        ContentTemplate="{Binding ToolTemplate.IconTemplate}"/>
                    </Viewbox>
                    <Border.Styles>
                        <Style Selector="Border#PART_PointerOverSource">
                            <Style Selector="^ :is(Control).TagIsPointerOver">
                                <Setter Property="Tag" Value=""/>
                            </Style>
                            <Style Selector="^:pointerover :is(Control).TagIsPointerOver">
                                <Setter Property="Tag" Value="PointerOver"/>
                            </Style>
                        </Style>
                    </Border.Styles>
                </Border>
            </Template>
        </Setter>
        <Setter Property="Tag" Value="{Binding ChildTools, Converter={StaticResource NullOrEmptyConverter}}"/>
        <Style Selector="^[Tag=true]">
            <Setter Property="Flyout">
                <Flyout FlyoutPresenterTheme="{StaticResource NoBorderFlyoutPresenter}">
                    <MenuFlyoutPresenter ItemsSource="{Binding ChildTools}" Margin="0" Padding="0" BorderThickness="0"
                                        ItemContainerTheme="{DynamicResource ToolMenuItemTheme}"/>
                </Flyout>
            </Setter>
        </Style>
        <Style Selector="^.Highlight">
            <Setter Property="Background" Value="{DynamicResource LaminarAccent}"/>
        </Style>
        <Style Selector="^.Highlight:pointerover">
            <Setter Property="Background" Value="{DynamicResource LaminarAccent}"/>
        </Style>
    </ControlTheme>
</ResourceDictionary>
