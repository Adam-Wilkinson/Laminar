<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lc="using:Laminar.Avalonia.Commands">
    <ControlTheme x:Key="{x:Type lc:LaminarCommandSwitch}" TargetType="{x:Type lc:LaminarCommandSwitch}">
        <Setter Property="Template">
            <ControlTemplate>
                <ToggleSwitch IsChecked="{TemplateBinding IsOn, Mode=TwoWay}" OnContent="" OffContent="">
                </ToggleSwitch>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
    
    <ControlTheme x:Key="{x:Type lc:LaminarCommandIcon}" TargetType="{x:Type lc:LaminarCommandIcon}">
        <Setter Property="Template">
            <ControlTemplate>
                <PathIcon Data="{TemplateBinding IconData}" 
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          Foreground="{DynamicResource LaminarForeground}"/>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
    
    <DataTemplate x:Key="LaminarCommandIcon" x:DataType="{x:Type lc:LaminarCommandInstance}">
        <Button IsEnabled="{Binding CanExecute}" 
                Background="{DynamicResource LaminarAccent}"
                Classes.HasFlyout="{Binding Command.ChildCommands, Converter={x:Static ObjectConverters.IsNotNull}}"
                Command="{Binding Command}"
                HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                CommandParameter="{Binding Parameter}">
            <ToolTip.Tip>
                <StackPanel>
                    <TextBlock Classes="b2" Text="{Binding  Description}"/>
                    <TextBlock Classes="b2" Text="{Binding Command.Gesture, StringFormat='Currently bound to {0}', FallbackValue='Nothing'}"/>
                    <TextBlock Classes="b2">Press Ctrl+B to change binding</TextBlock>
                </StackPanel>
            </ToolTip.Tip>
            <Button.Styles>
                <Style Selector="Button.HasFlyout">
                    <Setter Property="Flyout">
                        <MenuFlyout ItemsSource="{Binding ChildCommands}"
                                    ItemTemplate="{DynamicResource LaminarCommandMenuItem}"/>
                    </Setter>
                </Style>
            </Button.Styles>
            <Viewbox>
                <ContentPresenter ContentTemplate="{Binding Command.IconTemplate}"
                                  Content="{Binding}"/>
            </Viewbox>
        </Button>
    </DataTemplate>
    
    <DataTemplate x:Key="LaminarCommandMenuItem" x:DataType="{x:Type lc:LaminarCommandInstance}">
        <MenuItem Command="{Binding Command}" 
                  CommandParameter="{Binding Parameter}"
                  HorizontalAlignment="Stretch"
                  IsEnabled="{Binding CanExecute}">
            <MenuItem.Icon>
                <ContentControl Content="{Binding}" 
                                ContentTemplate="{Binding Command.IconTemplate}"
                                IsHitTestVisible="False"/>
            </MenuItem.Icon>
            <ToolTip.Tip>
                <StackPanel>
                    <TextBlock Classes="b2" Text="{Binding  Description}"/>
                    <TextBlock Classes="b2">Press Ctrl+B to change binding</TextBlock>
                </StackPanel>
            </ToolTip.Tip>
            <MenuItem.Header>
                <DockPanel HorizontalAlignment="Stretch">
                    <TextBlock DockPanel.Dock="Right"
                               VerticalAlignment="Center"
                               Classes="b2"
                               Text="{Binding Command.Gesture}"
                               Opacity="0.4"/>
                    <TextBlock Text="{Binding Command.Name}"
                               VerticalAlignment="Center"/>
                </DockPanel>
            </MenuItem.Header>
        </MenuItem>
    </DataTemplate>
</ResourceDictionary>
