<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Laminar.Avalonia.ViewModels"
             xmlns:dvm="using:Laminar.Avalonia.ViewModels.Design"
             xmlns:dd="using:Laminar.Avalonia.DragDrop"
             xmlns:lc="using:Laminar.Avalonia.ToolSystem"
             xmlns:fn="using:Laminar.Implementation.UserData.FileNavigation"
             xmlns:c="using:Laminar.Avalonia.Controls"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" d:DataContext="{x:Static dvm:DesignViewModel.FileNavigator}"
             x:DataType="vm:FileNavigatorViewModel"
             x:Class="Laminar.Avalonia.Views.FileNavigatorView">
    <UserControl.Resources>
        <ResourceDictionary>
            <StaticResource x:Key="{x:Type fn:LaminarStorageFile}" ResourceKey="ScriptSignatureColor"/>
            <StaticResource x:Key="{x:Type fn:LaminarStorageFolder}" ResourceKey="LaminarBackgroundAlt"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Panel Background="{DynamicResource LaminarBackgroundLighter}" MinWidth="1" Name="FileNavigator">
        <Panel.Styles>
            <Style Selector="DockPanel:pointerover :is(Control).HoverReveal">
                <Setter Property="IsVisible" Value="True"/>
            </Style>
            <Style Selector="DockPanel:not(:pointerover) :is(Control).HoverReveal">
                <Setter Property="IsVisible" Value="False"/>
            </Style>
            <Style Selector="DockPanel ContentControl[Tag=Toggle Enabled, True]">
                <Setter Property="IsVisible" Value="True"/>
            </Style>
        </Panel.Styles>
        
        <TreeView ClipToBounds="False" ItemsSource="{Binding RootFiles}">
            <TreeView.ItemTemplate>
                <TreeDataTemplate DataType="{x:Type vm:FileNavigatorItemViewModel}" ItemsSource="{Binding Children}">
                    <DockPanel Tag="{Binding ItemTypeName}"
                               Classes="FileNavigatorItem"
                               HorizontalAlignment="Stretch"
                               Height="37">
                        <ItemsControl DockPanel.Dock="Right"
                                      Margin="3"
                                      ItemsSource="{Binding QuickAccess}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Spacing="4"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Classes="HoverReveal" Width="32" Height="32" ContentTemplate="{StaticResource LaminarToolIconTemplate}">
                                        <ContentControl.Tag>
                                            <MultiBinding StringFormat="{}{0}, {1}">
                                                <Binding Path="Name"/>
                                                <Binding Path="$parent[DockPanel].((vm:FileNavigatorItemViewModel)DataContext).CoreItem.IsEffectivelyEnabled" Converter="{x:Static BoolConverters.Not}"/>
                                            </MultiBinding>
                                        </ContentControl.Tag>
                                        <lc:LaminarToolInstance Tool="{Binding}"
                                                                Parameter="{Binding $parent[DockPanel].DataContext}"/>
                                    </ContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <c:EditableLabel VerticalAlignment="Center" 
                                         Text="{Binding CoreItem.Name, Mode=TwoWay}" 
                                         IsBeingEdited="{Binding CoreItem.NeedsName, Mode=TwoWay}"/>
                        <DockPanel.Styles>
                            <Style Selector="DockPanel.FileNavigatorItem">
                                <Setter Property="Background" Value="{DynamicResource LaminarBackgroundAlt}"/>
                            </Style>
                            
                            <Style Selector="DockPanel.FileNavigatorItem[Tag=script]">
                                <Setter Property="Background" Value="{DynamicResource ScriptSignatureColor}"/>
                            </Style>
                        </DockPanel.Styles>
                    </DockPanel>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>
            
            <TreeView.Styles>
                <Style Selector="TreeViewItem">
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="dd:DragDropHandler.TriggerMouseButton" Value="Left"/>
                    <Setter Property="ClipToBounds" Value="False"/>
                </Style>
            </TreeView.Styles>
        </TreeView>
    </Panel>
</UserControl>
