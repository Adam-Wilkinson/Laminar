<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Laminar.Avalonia.ViewModels"
		xmlns:titlebars="using:Laminar.Avalonia.Views.CustomTitleBars"
		xmlns:pagetransitions="using:Laminar.Avalonia.PageTransitions"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:Laminar.Avalonia.Views"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Laminar.Avalonia.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/ProjectLaminarLogo.png"
        Title="Project: Laminar"
		FontFamily="Lucida Sans"
		Background="{DynamicResource LaminarBackground}"
		Foreground="{DynamicResource LaminarForeground}"
		ExtendClientAreaToDecorationsHint="True"
		ExtendClientAreaChromeHints="NoChrome"
		ExtendClientAreaTitleBarHeightHint="40">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

	<DockPanel VerticalAlignment="Stretch">
		<titlebars:WindowsTitleBar DockPanel.Dock="Top" SidebarState="{Binding SidebarState}"/>
		<titlebars:MacosTitleBar DockPanel.Dock="Top" SidebarState="{Binding SidebarState}"/>
		<TransitioningContentControl IsTransitionReversed="{Binding !SettingsOpen}" 
									 VerticalAlignment="Stretch" 
									 VerticalContentAlignment="Stretch" 
									 HorizontalContentAlignment="Stretch"
									 HorizontalAlignment="Stretch"
									 Content="{Binding WindowCentralControl}">
			<TransitioningContentControl.PageTransition>
				<pagetransitions:SettingsPageTransition Easing="QuadraticEaseInOut" Duration="0:0:0.3"/>
			</TransitioningContentControl.PageTransition>
		</TransitioningContentControl>
		
		<DockPanel.Styles>
			<Style Selector=":is(ToggleButton)#SettingsButton">
				<Setter Property="IsChecked" Value="{Binding SettingsOpen, Mode=TwoWay}"/>
			</Style>
			<Style Selector=":is(Button)#LaminarButton">
				<Setter Property="Command" Value="{Binding ToggleSidebar}"/>
			</Style>
		</DockPanel.Styles>
	</DockPanel>
</Window>
